#TODO: verbose flag - more columns
#TODO: environment sensitive commands
#TODO: refactor commands for host, port and database
#TODO: why is user_roles, users_orgs,orgs,accounts in auth and users db? which one to use?
#TODO: why is user_auths in users db? 

#ports 0 to 1023 are reserved
#argus-user-dev  - 1100
#argus-user-auth - 1101
alias dbconn-dev-argus-users='ssh -N -L 1100:argus-users-dev.cluster-cavqivemi9xz.ap-southeast-1.rds.amazonaws.com:3306 ec2-user@tpd-clb-temp-1215105520.ap-southeast-1.elb.amazonaws.com -i ~/certis/config/secrets/certis-tpd-pmo.pem &'
alias dbconn-dev-argus-auth='ssh -N -L 1101:argus-auth-dev.cluster-cavqivemi9xz.ap-southeast-1.rds.amazonaws.com:3306 ec2-user@tpd-clb-temp-1215105520.ap-southeast-1.elb.amazonaws.com -i ~/certis/config/secrets/certis-tpd-pmo.pem &'
#jobs to list running background processess

#use mysqlsh's credential store helper to remember your password

# ALL
function dball() {
  dbuu $1
  dbaua $1
}

## switch env
argp () {
	if [[ -z "$1" ]]
	then
		# unset AWS_DEFAULT_PROFILE AWS_PROFILE AWS_EB_PROFILE
		# echo AWS profile cleared.
    echo $_ARGUS_PROFILE
		return
	fi
	# local -a available_profiles
	# available_profiles=($(aws_profiles))
	# if [[ -z "${available_profiles[(r)$1]}" ]]
	# then
	# 	echo "${fg[red]}Profile '$1' not found in '${AWS_CONFIG_FILE:-$HOME/.aws/config}'" >&2
	# 	echo "Available profiles: ${(j:, :)available_profiles:-no profiles found}${reset_color}" >&2
	# 	return 1
	# fi
  _setArgusProfile $1
}

_setArgusProfile() {
  local argus_profile
  case $1 in
    d) argus_profile="development" ;;
    s) argus_profile="staging" ;;
    p) argus_profile="production" ;;
  esac

  export _ARGUS_PROFILE=$argus_profile
}

# users db

function dbuu() {
  print '====================================== users         ========================================='
  _dbuusers $1
  print '====================================== user orggrps  ========================================='
  _dbuorg-groups $1
  print '====================================== user roles    ========================================='
  _dbuuser_roles $1
  print '====================================== user auths??  ========================================='
  _dbuuser_auths $1
  print '====================================== accounts     ========================================='
  _dbuaccounts
}


function _dbuusers() {
  mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users --result-format=json << EOF | jq .
select *
from users
where staff_id = '$1'
EOF
}

function _dbuorg-groups() {
  mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users --result-format=table << EOF
select
    u.staff_id,
    a.name as acc,
    o.name as org,
    o.id as orgId,
    g.name as grp,
    g.id as grpId,
    ug.role
from users u
         inner join users_groups ug on u.id = ug.user_id
         inner join groups g on ug.group_id = g.id
         inner join organizations o on g.org_id = o.id
         inner join accounts a on o.account_id = a.id
where u.staff_id like '$1'
order by a.name, o.name, g.Name, ug.role
EOF
}


function _dbuaccounts() {
  mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users --result-format=table << EOF
select name,
       id
from accounts
where active = 1
EOF
}

function dbuasync_tasks() {
  mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users --result-format=table << EOF
select
        a.name 'account name',
        at.*
from async_tasks at
        inner join accounts a on at.account_id = a.id
order by at.started_at DESC
limit 10
EOF
}

function dbuemail_templates() {
  mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users -e "select * from email_templates" --result-format=json/pretty
}

function dbugroups() {
  mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users -e "select * from groups where name = '$1'" --result-format=table
}

function dbuorgs() {
  mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users -e "select * from organizations where name = '$1'" --result-format=table
}

# function _dbuuser_auths() {
#   mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users --result-format=table << EOF
# select a.name acc,
#        o.name org,
#        ua.id,
#        ua.active,
#        ua.staffId,
#        ua.passwordHash,
#        ua.passwordSalt,
#        ua.phone,
#        ua.photoUrl,
#        ua.lastSigninAt,
#        ua.createdAt,
#        ua.registeredAt,
#        ua.updatedAt
# from user_auths ua
#          left join accounts a on a.id = ua.accountId
#          left join organizations o on ua.organizationId = o.id
# where staffId = '$1'
# EOF
# }

function _dbuuser_roles() {
  mysqlsh --sql -u useradmin -h 127.0.0.1 -P 1100 -D argus_users --result-format=table << EOF
select u.staff_id,
       # ur.user_id,
       ur.role_id,
       CASE ur.role_id
           WHEN 1 THEN 'admin'
           WHEN 2 THEN 'officer'
           WHEN 3 THEN 'supervisor'
           WHEN 4 THEN 'account owner'
           WHEN 5 THEN 'manager'
           WHEN 6 THEN 'operator'
           ELSE 'LOL'
           END as role
from users_roles ur
         inner join users u on ur.user_id = u.id
where u.staff_id = '$1'
EOF
}


# auth db ################################################################################################
function dbaua() {
  print '====================================== user auths    ========================================='
  _dbauser_auths $1
  print '====================================== login attempts ========================================='
  _dbalogin_attempts $1
  print '====================================== users devices  ========================================='
  _dbausers_devices $1
  print '====================================== phone regs     ========================================='
  _dbaphone_regs $1
}

function _dbauser_auths() {
  mysqlsh --sql -u authadmin -h 127.0.0.1 -P 1101 -D argus_auth --result-format=json << EOF | jq .
select ua.id,
#        ua.accountId,
       a.name as acc,
       ua.staffId,
       ua.active,
       ua.passwordHash,
       ua.passwordSalt,
       ua.phone,
       ua.photoUrl,
       ua.failures,
       ua.lockout,
       ua.lastSigninAt,
       ua.registeredAt,
       ua.createdAt,
       ua.updatedAt
from user_auths ua
         inner join accounts a on ua.accountId = a.id
where staffId = '$1'
EOF
}


function _dbaaccount_resets() {
  mysqlsh --sql -u authadmin -h 127.0.0.1 -P 1101 -D argus_auth --result-format=table << EOF
select
       ua.staffId,
#        ar.userId,
       ar.resetCode,
       ar.expiredAt,
       ar.resetAt
from account_resets ar
         inner join user_auths ua on ua.id = ar.userId
where staffId = '$1'
order by expiredAt desc
EOF
}

function _dbaapps() {
  mysqlsh --sql -u authadmin -h 127.0.0.1 -P 1101 -D argus_auth --result-format=table << EOF
select apps.id,
       a.name,
       apps.appId,
       apps.appName,
       apps.checkDevice,
       apps.createdAt,
       apps.updatedAt
from apps
         inner join accounts a on apps.accountId = a.id
order by a.name,appId
EOF
}

#not useful
function _dbaapps_roles() {
  mysqlsh --sql -u authadmin -h 127.0.0.1 -P 1101 -D argus_auth --result-format=table << EOF
select a.name,
       apps.appId,
#        r.id,
       r.name,
       r.isDefault,
       r.services,
       r.organizations,
       r.actions,
       r.isAdmin
from apps
         inner join accounts a on apps.accountId = a.id
         inner join apps_roles ar on apps.Id = ar.appId
         inner join roles r on ar.roleId = r.id
order by a.name, apps.appId
EOF
}

#not useful
function _dbalogin_attempts() {
  mysqlsh --sql -u authadmin -h 127.0.0.1 -P 1101 -D argus_auth --result-format=table << EOF
select
       a.name,
       la.staffId,
#        la.userId, #user_auth id
       apps.appName,
#        la.ipAddress,
       la.deviceId,
       la.api,
       la.status,
       la.reason,
       la.method,
       la.similarity,
       la.createdAt
from login_attempts la
         inner join accounts a on la.accountId = a.id
         inner join apps on la.appId = apps.appId
where staffId = '$1'
order by createdAt desc
limit 5
EOF
}


#not useful
function _dbaphone_regs() {
  mysqlsh --sql -u authadmin -h 127.0.0.1 -P 1101 -D argus_auth --result-format=table << EOF
select
#        a.name,
       ua.staffId,
#        pr.userId,
       pr.appId,
       apps.appName,
       pr.deviceId,
       pr.phone,
       pr.regCode,
       pr.regPin,
       pr.photo1,
       pr.photo2,
       pr.similarity,
       pr.expiredAt,
       pr.verifiedAt,
       pr.completedAt
from phone_regs pr
         inner join user_auths ua on ua.id = pr.userId
         inner join accounts a on ua.accountId = a.id
         inner join apps on  pr.appId = apps.id
where ua.staffId = '$1'
order by expiredAt desc
limit 5
EOF
}

function _dbausers_devices() {
  mysqlsh --sql -u authadmin -h 127.0.0.1 -P 1101 -D argus_auth --result-format=table << EOF 
select ua.staffid,
       a.appid,
#        ud.userauthid,
       ud.appid,
       ud.deviceid,
#        ud.devicetoken,
       substr(ud.devicetoken, 1, 10) devicetoken10,
       ud.endpointarn
from users_devices ud
         inner join user_auths ua on ud.userauthid = ua.id
         inner join apps a on ud.appid = a.id
where ua.staffid = 'tim'
EOF
}
