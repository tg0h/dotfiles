# zoom
rshift + ralt + rctrl - z : yabai -m window --toggle zoom-fullscreen # enter fullscreen mode for the focused container
# rshift + ralt + rctrl - f : yabai -m window --toggle float
rshift + ralt + rctrl - w : yabai -m window --resize right:700:0
shift + ralt + rctrl - 0x14 : yabai -m space --balance # #key note use of shift instead of rshift

# Rmeh arrows - resize windows https://github.com/koekeishiya/yabai/issues/200
rshift + ralt + rctrl - left : yabai -m window --resize right:-100:0 2> /dev/null || yabai -m window --resize left:-100:0 2> /dev/null
rshift + ralt + rctrl - down : yabai -m window --resize bottom:0:100 2> /dev/null || yabai -m window --resize top:0:100 2> /dev/null
rshift + ralt + rctrl - up : yabai -m window --resize top:0:-100 2> /dev/null || yabai -m window --resize bottom:0:-100 2> /dev/null
rshift + ralt + rctrl - right : yabai -m window --resize right:100:0 2> /dev/null || yabai -m window --resize left:100:0 2> /dev/null
rshift + ralt + rctrl + lshift - left : yabai -m window --resize right:-300:0 2> /dev/null || yabai -m window --resize left:-300:0 2> /dev/null
rshift + ralt + rctrl + lshift - right : yabai -m window --resize right:300:0 2> /dev/null || yabai -m window --resize left:300:0 2> /dev/null

# Cycling
# cycle among windows in current monitor only
# yabai -m query --windows --space means for the currently focussed space only
rshift + ralt + rctrl - m : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\" and .app != \"Toggl Track\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"
rshift + ralt + rctrl - a : yabai -m window --focus "$(yabai -m query --windows --space | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\" and .app != \"Toggl Track\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"
# lshift + lctrl - s : yabai -m window --focus stack.next || yabai -m window --focus next || yabai -m window --focus stack.first || yabai -m window --focus first # only works for bsp windows, not floating windows

# Window navigation --------------------------------------------------------------------------------------
rshift + ralt + rctrl - h : yabai -m window --focus west || yabai -m display --focus west
rshift + ralt + rctrl - t : yabai -m window --focus south 
rshift + ralt + rctrl - n : yabai -m window --focus north
rshift + ralt + rctrl - s : yabai -m window --focus east || yabai -m display --focus east

# 0,1 - swap
# Rmeh + Lshift <home> - Move window (swap - assume shape of target)
# cycle among displays with wraparound
rshift + ralt + rctrl + lshift - h : yabai -m window --swap west || $(yabai -m window --display west; yabai -m display --focus west) || (yabai -m window --display 3 && yabai -m display --focus 3)
rshift + ralt + rctrl + lshift - t : yabai -m window --swap south || $(yabai -m window --display south; yabai -m display --focus south)
rshift + ralt + rctrl + lshift - n : yabai -m window --swap north || $(yabai -m window --display north; yabai -m display --focus north)
rshift + ralt + rctrl + lshift - s : yabai -m window --swap east || $(yabai -m window --display east; yabai -m display --focus east) || (yabai -m window --display 1 && yabai -m display --focus 1)

# 0,1,4 - move to
# Rmeh + Lshift + Lcmd <home> - Warp window (keep size)
rshift + ralt + rctrl + lshift + lcmd - h : yabai -m window --warp west
rshift + ralt + rctrl + lshift + lcmd - t : yabai -m window --warp south
rshift + ralt + rctrl + lshift + lcmd - n : yabai -m window --warp north
rshift + ralt + rctrl + lshift + lcmd - s : yabai -m window --warp east

# 0,1 - insert windows
# Rmeh + Lshift <bottom row> - Insert in container - trigger shortcut again to turn off
rshift + ralt + rctrl + lshift - m : yabai -m window --insert west
rshift + ralt + rctrl + lshift - w : yabai -m window --insert south
rshift + ralt + rctrl + lshift - v : yabai -m window --insert north
rshift + ralt + rctrl + lshift - z : yabai -m window --insert east

# close all non-active kitty windows
# -P 0 means run in parallel by setting maxprocs to max cpus
# lshift + lalt + lcmd - w : yabai -m query --windows | jq '.[] | select (."has-focus"==false and .app=="kitty") | .id' | xargs -I {} -P 0 yabai -m window --close {}
