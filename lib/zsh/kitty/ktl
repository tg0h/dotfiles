#!/bin/zsh

function ktl(){
  # kitty ls
  local verbose result

  while getopts 'v' opt; do
    case "$opt" in
      v) verbose=true;;
    esac
  done
  shift $(($OPTIND - 1))

  local result=$(kitty @ ls)

    local jqQuery=$(cat <<-EOF
   include "pad";
   include "colour";
   include "boolean";
   def __cmd:
    .[0] as \$cmd | .[1:] | join (" ") as \$rest |
    _brinkPink(\$cmd | trunc(50) | lp(50)) +" "+ _tacha(\$rest | trunc(50) | rp(50));
   def __env:
     if (length > 0) then (. | tostring | .[1:] | trunc(30) | __(.)) else __("-") end; 

   def _tab:
     "\(.id|lp(2)|_g(.)) üîçÔ∏è\(.is_focused|bool(.))  \(.title|rp(10)|_purple(.)) \(.layout|_orange(.)) \(.active_window_history|join(" "))";

   def _window:
   "\(.id | lp(2) | _y(.)) üîçÔ∏è\(.is_focused|bool(.))\(.is_self|bool(.)) \(.title|rp(21))  \(.cmdline | join(" ") | trunc(10) | lp(19) | _brinkPink(.)) üè°\(.env | __env) \(.cwd|trunc(20)|lp(66)|__(.))";

   def _fgProcess:
     "\(.cmdline |__cmd) \(.cwd|__(.)) \(.pid)";
     # "\(.cmdline | __cmd | trunc(70) | lp(70)| _tacha(.)) \(.cwd|__(.))";
      (
        .[] |
        .tabs[] | _tab,
          ( .windows[] | _window,
              (.foreground_processes[] | _fgProcess  )
          )
      )
EOF
)
        # select(.is_focused == true) |
        # .tabs[] |
        # "\(.id|rp(2)) \(.title|rp(18)) \(.layout|rp(12)) \(.is_focused|bool(.)) \n"+
        #   "\(.windows | map(_window)[])"

  if [ -n "$verbose" ]; then
    jq . <<< $result
  else
    jq --raw-output -L "~/.config/jq" "$jqQuery" <<< $result
  fi
}
