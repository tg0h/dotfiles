#!/bin/zsh

function ktl(){
  # kitty ls
  local verbose result

  while getopts 'v' opt; do
    case "$opt" in
      v) verbose=true;;
    esac
  done
  shift $(($OPTIND - 1))

  local result=$(kitty @ ls)

    local jqQuery=$(cat <<-EOF
   include "pad";
   include "colour";
   include "boolean";
   def __cmd:
     .[0] as \$cmd | .[1:] | join (" ") as \$rest |
     _brinkPink(\$cmd | ltrunc(20) | lp(44)) +" "+ _tacha(\$rest | trunc(29) | rp(29));
   def _sub:
     sub("(?<x>/Users/tim)";("_")) | sub("(?<x>/candy/main/)";("/c/m/")) ;
   def __cwd:
     _sub | ltrunc(55);
   def __env:
     if (length > 0) then (. | tostring | .[1:] | trunc(30) | __(.)) else __("-") end; 

   def _tab:
     "\(.id|lp(2)|_g(.))  üîçÔ∏è\(.is_focused|bool(.))  \(.title|ltrunc(30)|lp(30)|_purple(.)) \(.layout| lp(10) |_orange(.)) \(.active_window_history|join(" "))";

   def _window:
   "\(.id | lp(3) | _y(.)) üîçÔ∏è\(.is_focused|bool(.))\(.is_self|bool(.)) \(.title|ltrunc(30)|lp(30)) \(.cmdline | join(" ") | ltrunc(10) | rp(10) | _brinkPink(.)) üè°\(.env | __env) \(" " | lp(19)) \(.cwd| __cwd |__(.))";

   def _os_window:
   "\(.id | rp(2))  üîçÔ∏è\(.is_focused|bool(.))  \(.platform_window_id)";

   def _fgProcess:
     "\(.cmdline |__cmd) \(.cwd| __cwd |__(.)) \(.pid)";
      (
        .[] |
        _os_window,
          (.tabs[] | 
            _tab,
            ( 
              .windows[] | _window,
              (.foreground_processes[] | _fgProcess  )
            )
          )
      )
EOF
)
        # select(.is_focused == true) |
        # .tabs[] |
        # "\(.id|rp(2)) \(.title|rp(18)) \(.layout|rp(12)) \(.is_focused|bool(.)) \n"+
        #   "\(.windows | map(_window)[])"

  if [ -n "$verbose" ]; then
    jq . <<< $result
  else
    jq --raw-output -L "~/.config/jq" "$jqQuery" <<< $result
  fi
}
