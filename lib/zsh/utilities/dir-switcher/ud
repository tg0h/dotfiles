#!bin/zsh

function ud(){
  # fzf preview and switch to folder
  # ud configure - show configuration
  # ud configure edit - edit configuration
  # examples:
  # ud <searchDir> <searchDepth)
  # eg ud ~/.local/bin 2
  # TODO: how to implement priority with most frequently used first?

  local configFile=$XDG_CONFIG_HOME/zsh/dir-switcher/config.yml

  if [[ $1 == "configure" ]] && [[ $2 == "list" ]]; then
    udConfigureList $configFile
    return
  fi

  # prefer nvim over eu for clarity and unneeded dependency on eu alias
  [[ $1 == "configure" ]] && [[ $2 == "edit" ]] && nvim $configFile && return

  local changeToDir
  local searchDir=${1:-$XDG_CONFIG_HOME} # var expansion with default - get the $1 arg, if not found, default to $XDG_CONFIG_HOME
  local searchDepth=${2:-1} # var expansion with default - get the $1 arg, if not found, default to $XDG_CONFIG_HOME
  # fd --follow - follow symlink
  # TODO: exa does not show the contents for the symlink if you do not specify a trailing /

  # fd show --hidden ?
  local changeToTarget=$(fd . $searchDir --follow --color always --max-depth $searchDepth | fzf +m --preview='[[ $(file --mime {}) =~ inode/directory ]] &&
    exa --tree --long --icons --git --color always --sort modified --reverse --level '$searchDepth' --no-permissions --no-user --changed --git {}/ || (bat --style=numbers --color=always {} || cat {}) 2> /dev/null | head -300')

  # change to directory if it is not null, needed if fzf does not return a dir, eg
  # if fzf cancels via ctrl c

  if [[ -n "$changeToTarget" ]]; then
    [[ -d $changeToTarget ]] && cd $changeToTarget && return
    # if target is a file (check with -f), change to its dir instead
    # [[ -f $changeToTarget ]] && changeToTarget=${changeToTarget%/*} # zsh variable expansion - min match pattern /* and remove from tail
    [[ -f $changeToTarget ]] && nvim $changeToTarget
  fi
}
