#!bin/zsh

function gbll(){
  # git branch list

  # see https://git-scm.com/docs/git-for-each-ref#_field_names for the field names 
  # permitted in the git branch --format option

  local all format formatArg filter excludeCandy debug plain verbose filterOption sortOption 

  local sortBy="createdAt"
  local reverse=false 
  local imageFilter="all"

  while getopts 'apf:vs:r' opt; do
    case "$opt" in
      a) all="-a";;
      p) plain=true;;
      v) verbose=true;; # json format
      f) filterOption=$OPTARG
        case "$filterOption" in
          a) imageFilter="all";; # docker image names with <group>/<image>
          c) imageFilter="candy";; # refcandy ecr images that begin with 203...
          l) imageFilter="local";; # docker images without slash 
          s) imageFilter="slash";; # docker image names with <group>/<image>
        esac;;
      r) reverse=true;;
      s) sortOption=$OPTARG
        case "$sortOption" in
          c) sortBy="createdAt";;
          r) sortBy="repository";;
          s) sortBy="size";;
        esac;;
    esac
  done
  shift $(($OPTIND - 1))

  local formatString=$(cat <<-EOF
    %(HEAD) %(refname:short) %(committerdate:iso8601) %(authordate:iso8601) %(subject) %(authorname) %(contents:subject)
EOF
)

git branch -a --sort=-committerdate --format=$formatString
git branch -a --sort=-committerdate --format='%(HEAD)  %(committerdate:iso8601) %(refname:short) %(authordate:iso8601) %(subject) %(authorname) %(contents:subject)'

  # if ! [ $plain ] && ! [ $verbose ]; then
  # local result=$(docker image ls $all --format="{{json .}}")
# git branch -a --sort=-committerdate --format='%(HEAD) %(refname:short) %(committerdate:iso8601) %(authordate:iso8601) %(subject) %(authorname) %(contents:subject)'

#   local jqQuery=$(cat <<-EOF
#   include "docker/dil";
#     dil("$sortBy";$reverse;"$imageFilter")
# EOF
# )
#     jq --raw-output --slurp -L "~/.config/jq" -L "~/.local/lib/jq" "$jqQuery" <<< $result
#   elif [ $verbose ]; then
#     docker image ls $all --format="{{json .}}" | jq .
#   else
#     docker image ls $all
#   fi

}
