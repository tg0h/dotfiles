#!/bin/zsh

function gg(){
  # gg - quickly add and commit files, use the filename as the commit message
  # gg -e - allow an empty commit
  # gg -e <message> - allow an empty commit, specify message
  # gg -c - commit, specify checkpoint message 
  # gg -p '/tmp/tim' -e - specify a dir
  # gg -a - do not auto add files, only commit files that are already added

  local allowEmpty=false
  local isCheckpoint=false
  local checkpointMessage="ðŸš§ðŸš§ðŸš§ checkpoint ðŸš§ðŸš§ðŸš§"
  local gitPath
  local doNotAdd=""

  while getopts 'ecp:a' opt; do
    case "$opt" in
      e) allowEmpty=true;;
      c) isCheckpoint=true;;
      p) gitPath="-C ""$OPTARG";;
      a) doNotAdd=true;;
    esac
  done
  shift $(($OPTIND - 1))

  local message="$@"

  $isCheckpoint && message=$checkpointMessage

  if [[ -n "$doNotAdd" ]]; then
  else
    git ${=gitPath} add --all # git add . only works if at root of worktree
  fi

  if [ -z "$message" ]; then
    # just get the filename from the first line and use that as the commit message
    # copy from the 4th char onwards
    filepath=$(git ${=gitPath} status --porcelain | head -n 1  | cut -c 4-)
    # message=$(git-conventional-commit-msg -f $filepath -t "feat" )
  fi

  message=${message:-$filepath}

  # $allowEmpty expands to the true command which returns 0
  if $allowEmpty; then
    message=${message:-$checkpointMessage}
    git ${=gitPath} commit --allow-empty -m $message
  else
    git ${=gitPath} commit -m $message
  fi
}
