#!bin/zsh

# Select a docker container to remove
function fzf-docker-image-widget() {

  local fzfOut
  local basename=fzf-docker-image-widget

  local reverse_tmp_file
  if reverse_tmp_file="$(mktemp "/tmp/${basename}_reverse".XXXXXX)"; then
    # dil's default reverse option is reverse to sort by created at descending
    # set up the initial state to reflect this
    printf 'r' > "${reverse_tmp_file}" 
  fi

  local sortBy_tmp_file
  if sortBy_tmp_file="$(mktemp "/tmp/${basename}_sortBy".XXXXXX)"; then
    printf 'c' > "${sortBy_tmp_file}"
  fi

  local filter_tmp_file 
  if filter_tmp_file="$(mktemp "/tmp/${basename}_filter".XXXXXX)"; then
    printf '' > "${filter_tmp_file}"
  fi

  local HEADER=$(cat <<-EOF
       ⌃ T | ⌃ V        - inspect | verbose
sort   ⌃ G | ⌃ C  | ⌃ R - created | repo | size (toggle to reverse sort order)
filter ⌥ G | ⌥ C  | ⌥ R - candy | local | slash
       ⌃ H              - remove
EOF
)

  fzfOut=$(dil | fzf \
    --header=$HEADER \
    --height ~95% \
    --expect 'ctrl-t,ctrl-v' \
    --preview 'dii {1}' \
    --preview-window 'right,noborder,wrap,68%,<100(50%)' \
    --prompt "created> " \
    --bind "ctrl-h:reload(
              _fzf-docker-image-widget-state \"${sortBy_tmp_file}\" ${reverse_tmp_file} ${filter_tmp_file};
            )+execute-silent( docker image rm {1})" \
    --bind "ctrl-g:reload(
              printf 'c' > \"${sortBy_tmp_file}\"; 
              _fzf-docker-image-widget-toggle \"${reverse_tmp_file}\" reverse;
              _fzf-docker-image-widget-state \"${sortBy_tmp_file}\" ${reverse_tmp_file} ${filter_tmp_file};
            )+change-prompt(created> )" \
    --bind "ctrl-c:reload(
              printf 'r' > \"${sortBy_tmp_file}\"; 
              _fzf-docker-image-widget-toggle \"${reverse_tmp_file}\" reverse;
              _fzf-docker-image-widget-state \"${sortBy_tmp_file}\" ${reverse_tmp_file} ${filter_tmp_file};
            )+change-prompt(repo> )" \
    --bind "ctrl-r:reload(
              printf 's' > \"${sortBy_tmp_file}\"; 
              _fzf-docker-image-widget-toggle \"${reverse_tmp_file}\" reverse;
              _fzf-docker-image-widget-state \"${sortBy_tmp_file}\" ${reverse_tmp_file} ${filter_tmp_file};
            )+change-prompt(size> )" \
    --bind "alt-g:reload(
              # toggle candy repos / all
              _fzf-docker-image-widget-toggle \"${filter_tmp_file}\" c a;
              _fzf-docker-image-widget-state \"${sortBy_tmp_file}\" ${reverse_tmp_file} ${filter_tmp_file};
            )" \
    --bind "alt-c:reload(
              # toggle local repos /all
              _fzf-docker-image-widget-toggle \"${filter_tmp_file}\" l a;
              _fzf-docker-image-widget-state \"${sortBy_tmp_file}\" ${reverse_tmp_file} ${filter_tmp_file};
            )" \
    --bind "alt-r:reload(
              # toggle slash repos /all
              _fzf-docker-image-widget-toggle \"${filter_tmp_file}\" s a;
              _fzf-docker-image-widget-state \"${sortBy_tmp_file}\" ${reverse_tmp_file} ${filter_tmp_file};
            )" \
  )

  local key=$(head -1 <<< "$fzfOut")
  local selections=$(tail -n +2 <<< "$fzfOut") # get all lines after the first line
  local selection1=$(head -1 <<< "$selections")

  local selectedId=$(gawk '{print $1}' <<< "$selection1")

  if [ $selectedId ]; then
    if [ "$key" = ctrl-t ]; then
      dii $selectedId
    elif [ "$key" = ctrl-v ]; then
      dii -v $selectedId
    else
      local selectedIds=$(echo $selections | choose 0 | join-lines)
      LBUFFER+=$selectedIds
    fi
  fi

  rm -f "${reverse_tmp_file}" &> /dev/null
  rm -f "${sortBy_tmp_file}" &> /dev/null
  rm -f "${filter_tmp_file}" &> /dev/null
  zle reset-prompt
}
