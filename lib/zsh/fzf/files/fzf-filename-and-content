#!bin/zsh
# search for filename and file contents
# edits the file after picking the fzf entry

function fzf-filename-and-content(){
  # et <dir> searches for the filename and its contents in <dir>
  # <dir> defaults to cwd if none provided

  local dir=$1

  local HEADER=$(cat <<-EOF
  âŒ¥e/; edit file, preserve fzf search results
EOF
)

  # https://github.com/junegunn/fzf/issues/2789
  # to show the preview even when there are spaces in the filename,
  # use ansi c quoting to specify non-breaking space character
  local FIELD_MATCH_SEPARATOR=$'\u00a0'
  # local FIELD_MATCH_SEPARATOR=' '
  local fzfEntry=$(rg --follow --line-number --with-filename . $dir --color=always --field-match-separator $FIELD_MATCH_SEPARATOR\
    | fzf --header="$HEADER" \
      --delimiter $FIELD_MATCH_SEPARATOR \
      --preview "bat --style=numbers,header-filename --color=always {1} --highlight-line {2}" \
      --preview-window='bottom:nowrap,noborder,55%' \
      --bind 'alt-e:execute(nvim {1} +{2} -c "normal! zz" > /dev/tty 2>&1)' \
      --bind ';:execute(nvim {1} +{2} -c "normal! zz" > /dev/tty 2>&1)'
  )
      # --preview-window "right,noborder,~1,+{2}+1/2,<80(up)" \

  if [ -n "$fzfEntry" ]; then
    local file lineNumber
    IFS=$FIELD_MATCH_SEPARATOR read -r file lineNumber _ <<< $fzfEntry
    nvim $file +$lineNumber -c 'normal! zz'
  fi
}
