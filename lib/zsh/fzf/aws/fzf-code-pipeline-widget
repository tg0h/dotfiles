#!bin/zsh

function fzf-code-pipeline-widget() {
# show the action executions for a pipeline 
# show ape by default
  local id
  # id=$(ape | fzf | awk '{print $4}')
  local out=$( ape | \
    fzf --ansi --multi --preview-window down,60%:wrap \
    --preview 'apa -p {3} -s {5}' \
    --bind 'ctrl-/:change-preview-window(right,40%|down,60%,border-top|hidden|)' \
    --bind 'alt-g:reload(rcda aws >/dev/null ; ape lambda-stack-cdk-pipeline)' \
    --bind 'alt-r:reload(rcda aws >/dev/null ; ape)' \
    --expect=ctrl-d,ctrl-s,ctrl-l
  )

  local key=$(head -1 <<< "$out")
  local targets=$(tail -n +2 <<< "$out") # get all lines after the first line
  local target1=$(head -1 <<< "$targets")

  local id=$(gawk '{print $5}' <<< "$target1")
  local pipelineName=$(gawk '{print $3}' <<< "$target1")
  if [ $id ]; then
    if [ "$key" = ctrl-s ]; then
      # apa -s $id
      # local branches=()

      while IFS= read -r execution ; do 
        # remove first 2 chars of line (contains empty space or *)
        # local branch=${gitbranchline:2}
        local id=$(gawk '{print $5}' <<< "$execution")
        local pipelineName=$(gawk '{print $3}' <<< "$execution")
        apa -p $pipelineName -s $id
      done <<< "$targets"

      # for branch in $branches; do
      #   git branch -D $branch
      # done
      zle reset-prompt
      return
    elif [ "$key" = ctrl-l ]; then
      while IFS= read -r execution ; do 
        # remove first 2 chars of line (contains empty space or *)
        # local branch=${gitbranchline:2}
        local id=$(gawk '{print $5}' <<< "$execution")
        local pipelineName=$(gawk '{print $3}' <<< "$execution")
        apa -p $pipelineName -o $id
      done <<< "$targets"
    elif [ "$key" = ctrl-d ]; then
      apa -p $pipelineName $id
    else
      apa -p $pipelineName $id
    fi
  fi

  zle reset-prompt
  return
}
