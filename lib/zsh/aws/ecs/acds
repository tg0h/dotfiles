#!/bin/zsh

function acds(){
  # aws ecs describe services - acds service1 service2 service3
  # default to staging cluster
  # -c d|s|p # to get dev, staging or prod cluster
  # -n # number of events to display for the service
  # -p # show 1 piece of data per line

  local verbose cluster clusterOpt service number plain
  while getopts 'vc:n:pd' opt; do
    case "$opt" in
      v) verbose=true;;
      d) debug=true;;
      n) number=$OPTARG;;
      p) plain=true;;
      c) clusterOpt=$OPTARG
        case "$clusterOpt" in
          d) cluster="DeveloperCluster";;
          s) cluster="StagingCluster";;
          p) cluster="ProductionCluster";;
        esac
        ;;
    esac
  done
  shift $(($OPTIND - 1))

  number=${number:-20}
  cluster=${cluster:-StagingCluster}
  service=${@:-DaemonV2Service-default}
  [ -n "$debug" ] && echo number is $number >&2

  # service.status can be
  #   ACTIVE
  #   DRAINING
  #   INACTIVE
  # deployment.status can be 
  #   PRIMARY  - most recent deployment
  #   ACTIVE   - still has running tasks, being replaced by PRIMARY
  #   INACTIVE - deployment has been completely replaced
  # deployment.rolloutState can be 
  #   IN_PROGRESS
  #   COMPLETED

    local jqQuery=$(cat <<-EOF
    include "aws/ecs/acds";
    acds($number)
EOF
)

    local jqQueryPlain=$(cat <<-EOF
    include "aws/ecs/acdsPlain";
    acdsPlain
EOF
)


  # ${=var} - tell zsh to word split var
  local result=$(aws ecs describe-services --cluster $cluster --service ${=service})

  [ -n "$debug" ] && echo jqQuery is $jqQuery >&2

  if [ -n "$verbose" ]; then
    jq --raw-output -L "~/.config/jq" "." <<< $result
  elif [ -n "$plain" ]; then
    jq --raw-output -L "~/.config/jq" -L "~/.local/lib/jq" "$jqQueryPlain" <<< $result
  else
    jq --raw-output -L "~/.config/jq" -L "~/.local/lib/jq" "$jqQuery" <<< $result
  fi
}
