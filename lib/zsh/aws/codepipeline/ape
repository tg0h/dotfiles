#!bin/zsh

function ape(){
  # list pipeline executions
  # ape <pipelineName> - defaults to RC pipeline
  # -v - verbose
  # -d - debug
  # -n - maxItems

  local verbose debug="false" local n
  while getopts 'vdn:' opt; do
    case "$opt" in
      v) verbose=true;;
      d) debug=true;; # show more output (github commit url)
      n) n=$OPTARG;; # show more output (github commit url)
    esac
  done
  shift $(($OPTIND - 1))

  n=${n:-30}
  local pipelineName=${1:-$CANDY_PIPELINE}
  # local result=$(aws codepipeline list-pipeline-executions --pipeline-name $CANDY_PIPELINE --max-items $n)

  # silence REDIS OK 
  local cacheKey="aws/ape/pipelineName:$pipelineName/n:$n"
  rcache $cacheKey.604800 _ape $pipelineName $n
  local result=$(rcg $cacheKey)

  local jqQuery=$(cat <<-EOF
    include "pad";
    include "colour";
    include "aws-pipeline";

    def showCommitUrl:
      if "$debug"=="true" then
      "\n    \(.sourceRevisions[0].revisionUrl | __(.))"
      else
         ""
      end;

    .pipelineExecutionSummaries[] |
      "\(.startTime[8:10] | _bt(.))\(.startTime[5:7] | __(.))"+
      " \(.startTime[11:13] | _bt(.))\(.startTime[13:16] | __(.))"+
      " $pipelineName"+
      " \(.sourceRevisions[0].revisionId[0:5] | _g(.))"+
      " \(.pipelineExecutionId | __(.))"+
      " \(.status | aplStatus | rp(20))"+
      "\(.sourceRevisions[0].revisionSummary | fromjson | .CommitMessage | gsub("\\r\\n";" ") | gsub("\\n";" ") | trunc(70))  " + showCommitUrl
EOF
)
     # "\(.sourceRevisions[0].revisionSummary | fromjson | .CommitMessage | (sub("\\n";" ")))"

  if [ $verbose ]; then
    jq --raw-output "." <<< $result
  else
    jq --raw-output -L "~/.config/jq" "$jqQuery" <<< $result
  fi
}
